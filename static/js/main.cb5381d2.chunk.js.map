{"version":3,"sources":["logo.svg","types.ts","Hotkey.ts","systems/position.ts","systems/input.ts","utils.ts","systems/feed.ts","Recs.tsx","App.tsx","systems/oroborus.ts","reportWebVitals.ts","index.tsx"],"names":["SCALE","mapIEKeys","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","formatKeyEvent","event","key","keys","shiftKey","push","ctrlKey","altKey","toLowerCase","join","isInputLike","el","tagName","isContentEditable","move","pos","direction","speed","width","window","innerWidth","height","innerHeight","x","y","collides","ax","ay","bx","by","size","getRandomPosition","Math","floor","random","lastHead","nextFruitId","throwTooSoon","Error","initialWordContextValue","has","get","add","del","dispatch","WorldContext","React","createContext","useWorld","useContext","chidren","children","systems","initialEntities","useState","entities","setEntities","useLayoutEffect","filter","system","setup","reduce","nextEntities","useCallback","entityId","hasOwnProperty","initialComponents","entity","next","args","world","useMemo","Provider","value","createWorld","World","useEntity","useEcsDispatch","raf","requestAnimationFrame","caf","cancelAnimationFrame","inputDirection","playerDirection","player","every","v","i","head","tail","slice","max","length","game","score","console","log","fruits","Object","entries","type","eatenFruit","find","position","res","id","fruit","some","end","Date","now","start","0","hotkeys","GameLoop","directionRef","useRef","gameRef","useEffect","current","handler","excludeBoundry","includeBoundry","ignoreInputEvents","boundry","document","handlerRef","Array","isArray","map","k","onKeyDown","repeat","eventKey","includes","target","contains","addEventListener","removeEventListener","useHotkey","handle","loop","undefined","Score","className","App","renderChildren","left","top","style","background","alt","src","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb5381d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { Entity, System } from './Recs'\r\n\r\nexport type Position = readonly [number, number]\r\nexport type Direction = readonly [-1 | 0 | 1, -1 | 0 | 1] //'up' | 'down' | 'left' | 'right'\r\n\r\nexport type PlayerComponents = {\r\n    type: 'player'\r\n    head: Position\r\n    tail: Position[]\r\n    speed: number\r\n    direction: Direction\r\n}\r\n\r\nexport type FruitComponents = {\r\n    type: 'fruit'\r\n    position: Position\r\n}\r\n\r\nexport type GameComponents = {\r\n    type: 'game'\r\n    start: number\r\n    end?: number\r\n    score: number\r\n}\r\n\r\nexport type SnekEntity = Entity<PlayerComponents | FruitComponents | GameComponents>\r\nexport type SnekEntities = Record<number, Entity<FruitComponents>> & {\r\n    game: GameComponents\r\n    player: PlayerComponents\r\n}\r\n\r\nexport type InputAction = Direction | undefined\r\n\r\nexport type SnekSystem = System<SnekEntity, SnekEntities, InputAction>\r\n\r\nexport const SCALE = 20","import React, { useCallback, useRef, useEffect, RefObject, useMemo } from 'react'\r\n\r\nexport type HotkeyOptions = {\r\n    /** When provided, events must be dispatched from nodes outside the boundry, events on or inside are ignored */ \r\n    excludeBoundry?: RefObject<HTMLElement>\r\n    /** When provided, events must be dispatched from nodes within the boundry, events outside are ignored */\r\n    includeBoundry?: RefObject<HTMLElement>\r\n    /** When true, events from input-like fields will be ignored */\r\n    ignoreInputEvents?: boolean\r\n}\r\n\r\n// Copied from react-dom source for normalizing keys\r\nconst mapIEKeys = {\r\n    Esc: 'Escape',\r\n    Spacebar: ' ',\r\n    Left: 'ArrowLeft',\r\n    Up: 'ArrowUp',\r\n    Right: 'ArrowRight',\r\n    Down: 'ArrowDown',\r\n    Del: 'Delete',\r\n    Win: 'OS',\r\n    Menu: 'ContextMenu',\r\n    Apps: 'ContextMenu',\r\n    Scroll: 'ScrollLock',\r\n    MozPrintableKey: 'Unidentified'\r\n}\r\n\r\nfunction formatKeyEvent(event: React.KeyboardEvent | KeyboardEvent) {\r\n    const key = mapIEKeys[event.key as keyof typeof mapIEKeys] ?? event.key // Not actually needed if event is synthetic (react event)\r\n    const keys: string[] = []\r\n    if (event.shiftKey && key !== 'Shift') keys.push('shift')\r\n    if (event.ctrlKey && key !== 'Control') keys.push('ctrl')\r\n    if (event.altKey && key !== 'Alt') keys.push('alt')\r\n    keys.push(key.toLowerCase())\r\n    return keys.join(' ')\r\n}\r\n\r\n// Doesn't catch selects from mui (among others)\r\nconst isInputLike = (el: HTMLElement) => el.tagName === 'INPUT' ||\r\n    el.tagName === 'SELECT' ||\r\n    el.tagName === 'TEXTAREA' ||\r\n    el.isContentEditable\r\n\r\n/** \r\n * \r\n * @param key which key combination to handle. Optionally prepend the modifier before the key (separated by a space)\r\n * @param handler function to invoke when key is pressed. Should be a memoized function for best performance\r\n * @param options (optional) When provided, events must be dispatched from nodes within the boundry, events outside are ignored\r\n * @example useHotkey('ctrl s', handleSave, formRef) // handleSave when focus is on an element inside the form\r\n * @note If using multiple modifiers, they occur in the following order: `shift` `ctrl` `alt`\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values for possible key values\r\n */\r\nexport const useHotkey = (\r\n    key: string | string[],\r\n    handler: (event: KeyboardEvent) => void,\r\n    { excludeBoundry, includeBoundry, ignoreInputEvents }: HotkeyOptions = {}\r\n) => {\r\n    const boundry = includeBoundry?.current ?? document\r\n\r\n    // performance increased by wrapping handler (which possibly changes quite often) in a ref and wrapping that in a callback with no dependencies (using the ref instead)\r\n    const handlerRef = useRef({ handler, excludeBoundry, ignoreInputEvents })\r\n    // update the ref value when handler is changed (could be quite often)\r\n    useEffect(() => { handlerRef.current = { handler, excludeBoundry, ignoreInputEvents } }, [handler, excludeBoundry, ignoreInputEvents])\r\n\r\n    const keys = useMemo(() => Array.isArray(key) ? key.map(k => k.toLowerCase()) : [key.toLowerCase()], [key])\r\n\r\n    const onKeyDown = useCallback((event: KeyboardEvent) => {\r\n        if(event.repeat) return\r\n        const eventKey = formatKeyEvent(event)\r\n        if (!keys.includes(eventKey)) return\r\n        const { handler, excludeBoundry, ignoreInputEvents } = handlerRef.current\r\n        if (ignoreInputEvents && isInputLike(event.target as HTMLElement)) return\r\n        if (!!excludeBoundry?.current && excludeBoundry.current.contains(event.target as any)) return\r\n        handler(event)\r\n    }, [keys])\r\n\r\n    useEffect(() => {\r\n        boundry.addEventListener('keydown', onKeyDown as any)\r\n        return () => boundry.removeEventListener('keydown', onKeyDown as any)\r\n    }, [onKeyDown, boundry])\r\n}","import { Direction, Position, SCALE, SnekSystem } from '../types'\r\n\r\nexport const position: SnekSystem = (entities) => {\r\n    const {head, tail, direction, speed} = entities.player\r\n\r\n    if(!direction[0] && !direction[1] && !speed){\r\n        console.log('cant move')\r\n        return entities\r\n    }\r\n\r\n    return {\r\n        ...entities,\r\n        player: {\r\n            ...entities.player,\r\n            tail: [\r\n                ...tail.slice(Math.max(tail.length - entities.game.score + 5, 0)),\r\n                head\r\n            ],\r\n            head: move(head, direction, speed)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction move(pos: Position, direction: Direction, speed: number) {\r\n    const width = window.innerWidth\r\n    const height = window.innerHeight\r\n    let x = pos[0] + direction[0] * speed\r\n    if(x < 0) x = width - SCALE\r\n    if(x + SCALE > width) x = 0\r\n    let y = pos[1] + direction[1] * speed\r\n    if(y < 0) y = height - SCALE\r\n    if(y + SCALE > height) y = 0\r\n    return [x, y] as Position\r\n}","import { SnekSystem } from '../types'\r\n\r\nexport const input: SnekSystem = (entities, inputDirection) => {\r\n    const playerDirection = entities.player.direction\r\n    if(!inputDirection) return entities\r\n\r\n    const direction = inputDirection.every((v, i) => v + playerDirection[i]) ? inputDirection : playerDirection\r\n    return {\r\n        ...entities,\r\n        player: {\r\n            ...entities.player,\r\n            direction\r\n        }\r\n    }\r\n}","import { Position, SCALE } from './types'\r\n\r\nexport const collides = ([ax, ay]: Position, [bx, by]: Position, size: number = SCALE) => {\r\n    return (ax + size >= bx && ax < bx + size) && (ay + size >= by && ay < by + size)\r\n}\r\n\r\nexport const getRandomPosition = () => {\r\n    const width = window.innerWidth - SCALE * 2\r\n    const height = window.innerHeight - SCALE * 2\r\n    return [\r\n        Math.floor(Math.random() * width) + SCALE,\r\n        Math.floor(Math.random() * height) + SCALE,\r\n    ] as Position\r\n}","import { Entity } from '../Recs'\r\nimport { FruitComponents, Position, SnekSystem } from '../types'\r\nimport { getRandomPosition, collides } from '../utils'\r\n\r\nlet lastHead: Position | null = null\r\nlet nextFruitId = 0\r\n\r\nexport const feed: SnekSystem = (entities) => {\r\n    const { head } = entities.player\r\n    if(lastHead === head) return entities\r\n\r\n    lastHead = head\r\n    const fruits = Object.entries(entities).filter(([, entity]) => entity.type === 'fruit') as [string, Entity<FruitComponents>][]\r\n    const eatenFruit = fruits\r\n        .find(([, entity]) => entity.type === 'fruit' && collides(entity.position, head)) as [string, Entity<FruitComponents>]\r\n\r\n    if(!eatenFruit) return entities\r\n\r\n    return {\r\n        ...fruits.reduce((res, [id, fruit]) => id === eatenFruit[0] ? res : {...res, [id]: fruit}, {}),\r\n        [++nextFruitId]: {\r\n            position: getRandomPosition(),\r\n            type: 'fruit'\r\n        },\r\n        game: {\r\n            ...entities.game,\r\n            score: entities.game.score + 5\r\n        },\r\n        player: entities.player,\r\n    }\r\n}\r\n\r\n","import React, { useCallback, useContext, useLayoutEffect, useMemo, useState, ReactNode } from 'react'\r\n\r\nexport type Entity<TComponents = Record<string, unknown>> = Readonly<TComponents>\r\n\r\nexport type Entities<TEntity extends Entity = Entity> = Record<string, TEntity>\r\n\r\nexport type System<\r\n    TEntity extends Entity = Entity,\r\n    TEntities extends Entities<TEntity> = Entities<TEntity>,\r\n    TSystemArg = readonly unknown[]\r\n> = {\r\n    setup?: (entities: Readonly<TEntities>) => TEntities\r\n    (entities: Readonly<TEntities>, arg: TSystemArg): TEntities\r\n}\r\n\r\nexport type EcsDispatch<\r\n    TSystemArg = readonly unknown[]\r\n> = (arg: TSystemArg) => void\r\n\r\nexport type WorldProps<\r\n    TEntity extends Entity = Entity,\r\n    TEntities extends Entities<TEntity> = Entities<TEntity>,\r\n    TSystemArg = readonly unknown[]\r\n> = {\r\n    systems: Array<System<TEntity, TEntities, TSystemArg>>\r\n    children: (entities: TEntities) => ReactNode\r\n    initialEntities: TEntities\r\n}\r\n\r\nexport function createWorld<\r\n    TEntity extends Entity = Entity,\r\n    TEntities extends Entities<TEntity> = Entities<TEntity>,\r\n    TSystemArg = readonly unknown[]\r\n>() {\r\n    type WorldContextValue<\r\n        TEntity extends Entity = Entity,\r\n        TEntities extends Entities<TEntity> = Entities<TEntity>,\r\n        TSystemArg = readonly unknown[]\r\n    > = {\r\n        has: <K extends keyof TEntities>(entityId: K) => boolean\r\n        get: <K extends keyof TEntities>(entityId: K) => TEntities[K] | undefined\r\n        add: <K extends keyof TEntities>(entityId: K, initialComponents: TEntities[K]) => TEntities[K]\r\n        del: <K extends keyof TEntities>(entityId: K) => void\r\n        dispatch: (args: TSystemArg) => void\r\n    }\r\n\r\n    const throwTooSoon = () => { throw new Error('too soon') }\r\n    \r\n    const initialWordContextValue: WorldContextValue<TEntity, TEntities, TSystemArg> = {\r\n        has: throwTooSoon,\r\n        get: throwTooSoon,\r\n        add: throwTooSoon,\r\n        del: throwTooSoon,\r\n        dispatch: throwTooSoon\r\n    }\r\n    const WorldContext = React.createContext(initialWordContextValue)\r\n\r\n    function World({ children: chidren, systems, initialEntities }: WorldProps<TEntity, TEntities, TSystemArg>) {\r\n        const [entities, setEntities] = useState<TEntities>(initialEntities)\r\n\r\n        // Run setup in all systems\r\n        useLayoutEffect(() => {\r\n            setEntities(entities => systems\r\n                .filter(system => !!system.setup)\r\n                .reduce((nextEntities, system) => system.setup!(nextEntities), entities)\r\n            )\r\n        }, [systems])\r\n\r\n        const has = useCallback(<K extends keyof TEntities>(entityId: K) => entities.hasOwnProperty(entityId), [entities])\r\n        const get = useCallback(<K extends keyof TEntities>(entityId: K): TEntities[K] | undefined => entities[entityId], [entities])\r\n        const add = useCallback(<K extends keyof TEntities>(entityId: K, initialComponents: TEntities[K]): TEntities[K] => {\r\n            const entity = initialComponents\r\n            setEntities(entities => ({ ...entities, [entityId]: entity }))\r\n            return entity\r\n        }, [])\r\n        const del = useCallback(<K extends keyof TEntities>(entityId: K) => {\r\n            setEntities(entities => {\r\n                const next = {...entities}\r\n                delete next[entityId]\r\n                return next\r\n            })\r\n        }, [])\r\n        const dispatch = useCallback((args: TSystemArg) => {\r\n            setEntities(entities => systems\r\n                .reduce((nextEntities, system) => system(nextEntities, args), entities)\r\n            )\r\n        }, [systems])\r\n\r\n        const world = useMemo<WorldContextValue<TEntity, TEntities, TSystemArg>>(() => ({\r\n            has, get, add, del, dispatch\r\n        }), [has, get, add, del, dispatch])\r\n\r\n        return (\r\n            <WorldContext.Provider\r\n                value={world as any}\r\n            >\r\n                {chidren(entities)}\r\n            </WorldContext.Provider>\r\n        )\r\n    }\r\n\r\n    const useWorld = () => useContext(WorldContext)\r\n    const useEntity = <K extends keyof TEntities>(entityId: K): TEntities[K] => useWorld().get(entityId)!\r\n    const useEcsDispatch = () => useWorld().dispatch\r\n\r\n    return [World, useEntity, useEcsDispatch] as const\r\n}\r\n\r\n// export function useEntity<TComponents extends {}>(entityId: string) {\r\n//     return useContext(WorldContext).get(entityId) as Entity<TComponents>\r\n// }\r\n\r\n// export function useEcsDispatch() {\r\n//     return useContext(WorldContext).dispatch\r\n// }","import React, { useCallback, useEffect, useRef } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport { createWorld, Entity } from './Recs'\nimport { InputAction, SnekEntities, SnekEntity, Direction, SnekSystem, SCALE, GameComponents } from './types'\nimport { useHotkey } from './Hotkey'\nimport { position } from './systems/position'\nimport { input } from './systems/input'\nimport { feed } from './systems/feed'\nimport { oroborus } from './systems/oroborus'\nimport { getRandomPosition } from './utils'\n\nconst [World, useEntity, useEcsDispatch] = createWorld<SnekEntity, SnekEntities, InputAction>()\n\nconst raf = requestAnimationFrame\nconst caf = cancelAnimationFrame\n\nconst systems: SnekSystem[] = [\n\tinput,\n\tposition,\n\tfeed,\n\toroborus\n]\n\nconst initialEntities: SnekEntities = {\n\tplayer: {\n\t\ttype: 'player',\n\t\thead: getRandomPosition(),\n\t\ttail: [],\n\t\tspeed: 5,\n\t\tdirection: [0, 1]\n\t},\n\tgame: {\n\t\ttype: 'game',\n\t\tscore: 0,\n\t\tstart: Date.now(),\n\t},\n\t0: {\n\t\ttype: 'fruit',\n\t\tposition: getRandomPosition()\n\t}\n}\n\nconst hotkeys = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown']\n\nfunction GameLoop() {\n\tconst directionRef = useRef<Direction>()\n\tconst gameRef = useRef<Entity<GameComponents>>()\n\tconst dispatch = useEcsDispatch()\n\n\tconst game = useEntity('game')\n\tuseEffect(() => {\n\t\tgameRef.current = game\n\t}, [game])\n\n\tuseHotkey(hotkeys, useCallback((event: KeyboardEvent) => {\n\t\tswitch(event.key){\n\t\t\tcase 'ArrowUp': directionRef.current = [0, -1]; break\n\t\t\tcase 'ArrowDown': directionRef.current = [0, 1]; break\n\t\t\tcase 'ArrowLeft': directionRef.current = [-1, 0]; break\n\t\t\tcase 'ArrowRight': directionRef.current = [1, 0]; break\n\t\t}\n\t}, []))\n\n\tuseEffect(() => {\n\t\tlet handle: number | null = null\n\t\tconst loop = () => {\n\t\t\tdispatch(directionRef.current)\n\t\t\tdirectionRef.current = undefined\n\t\t\tif(!gameRef.current?.end)\n\t\t\t\thandle = raf(loop)\n\t\t}\n\t\thandle = raf(loop)\n\t\treturn () => {\n\t\t\tif(handle){\n\t\t\t\tcaf(handle)\n\t\t\t\thandle = null\n\t\t\t}\n\t\t}\n\t}, [dispatch])\n\n\treturn null\n}\n\nfunction Score(){\n\tconst game = useEntity('game')\n\n\treturn (<div className='score'>\n\t\t<h2>{game.score}</h2>\n\t\t{game.end && <h4>GAME OVER</h4>}\n\t</div>)\n}\n\n\nfunction App() {\n\n\tconst renderChildren = useCallback((entities: SnekEntities) => {\n\t\treturn (<>\n\t\t\t<GameLoop />\n\t\t\t<Score />\n\t\t\t{Object.entries(entities).map(([id, entity]) => {\n\t\t\t\tswitch(entity.type){\n\t\t\t\t\tcase 'player':{\n\t\t\t\t\t\tlet [left, top] = entity.head\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tentity.tail.map(([left, top], i) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={`t-${i}`}\n\t\t\t\t\t\t\t\t\tstyle={{width: SCALE, height: SCALE, position: 'absolute', left, top, background: 'lime'}}\n\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey='player'\n\t\t\t\t\t\t\t\tstyle={{width: SCALE, height: SCALE, position: 'absolute', left, top, background: 'cyan'}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t\tcase 'fruit':\n\t\t\t\t\t\tconst [left, top] = entity.position\n\t\t\t\t\t\treturn <img\n\t\t\t\t\t\t\talt='fruit'\n\t\t\t\t\t\t\tclassName='App-logo'\n\t\t\t\t\t\t\tkey={`fruit-${id}`}\n\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\tstyle={{position: 'absolute', left, top }}\n\t\t\t\t\t\t/>\n\t\t\t\t\tdefault: return null\n\t\t\t\t}\n\t\t\t})}\n\t\t</>)\n\t}, [])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<World\n\t\t\t\t\tsystems={systems}\n\t\t\t\t\tinitialEntities={initialEntities}\n\t\t\t\t>\n\t\t\t\t\t{renderChildren}\n\t\t\t\t</World>\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { SnekSystem } from '../types';\r\nimport { collides } from '../utils';\r\n\r\nexport const oroborus: SnekSystem = (entities) => {\r\n\r\n    const { tail, head } = entities.player\r\n    const eatself = tail.some((pos) => collides(pos, head, 1))\r\n    if(!eatself) return entities\r\n    \r\n    return {\r\n        ...entities,\r\n        game: {\r\n            ...entities.game,\r\n            end: Date.now(),\r\n        },\r\n        player: {\r\n            ...entities.player,\r\n            speed: 0\r\n        }\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}